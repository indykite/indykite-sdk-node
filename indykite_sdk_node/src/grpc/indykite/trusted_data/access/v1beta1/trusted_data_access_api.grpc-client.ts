// @generated by protobuf-ts 2.9.0 with parameter long_type_string,client_grpc1,generate_dependencies
// @generated from protobuf file "indykite/trusted_data/access/v1beta1/trusted_data_access_api.proto" (package "indykite.trusted_data.access.v1beta1", syntax proto3)
// tslint:disable
//
// Copyright (c) 2024 IndyKite
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import { TrustedDataAccessAPI } from "./trusted_data_access_api";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { RevokeConsentResponse } from "./trusted_data_access_api";
import type { RevokeConsentRequest } from "./trusted_data_access_api";
import type { GrantConsentResponse } from "./trusted_data_access_api";
import type { GrantConsentRequest } from "./trusted_data_access_api";
import type { TrustedDataAccessResponse } from "./trusted_data_access_api";
import type { TrustedDataAccessRequest } from "./trusted_data_access_api";
import * as grpc from "@grpc/grpc-js";
/**
 * TrustedDataAccessAPI represents the service interface for the Trusted Data Access API.
 *
 * @generated from protobuf service indykite.trusted_data.access.v1beta1.TrustedDataAccessAPI
 */
export interface ITrustedDataAccessAPIClient {
    /**
     * @generated from protobuf rpc: TrustedDataAccess(indykite.trusted_data.access.v1beta1.TrustedDataAccessRequest) returns (indykite.trusted_data.access.v1beta1.TrustedDataAccessResponse);
     */
    trustedDataAccess(input: TrustedDataAccessRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: TrustedDataAccessResponse) => void): grpc.ClientUnaryCall;
    trustedDataAccess(input: TrustedDataAccessRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: TrustedDataAccessResponse) => void): grpc.ClientUnaryCall;
    trustedDataAccess(input: TrustedDataAccessRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: TrustedDataAccessResponse) => void): grpc.ClientUnaryCall;
    trustedDataAccess(input: TrustedDataAccessRequest, callback: (err: grpc.ServiceError | null, value?: TrustedDataAccessResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: GrantConsent(indykite.trusted_data.access.v1beta1.GrantConsentRequest) returns (indykite.trusted_data.access.v1beta1.GrantConsentResponse);
     */
    grantConsent(input: GrantConsentRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: GrantConsentResponse) => void): grpc.ClientUnaryCall;
    grantConsent(input: GrantConsentRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: GrantConsentResponse) => void): grpc.ClientUnaryCall;
    grantConsent(input: GrantConsentRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: GrantConsentResponse) => void): grpc.ClientUnaryCall;
    grantConsent(input: GrantConsentRequest, callback: (err: grpc.ServiceError | null, value?: GrantConsentResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: RevokeConsent(indykite.trusted_data.access.v1beta1.RevokeConsentRequest) returns (indykite.trusted_data.access.v1beta1.RevokeConsentResponse);
     */
    revokeConsent(input: RevokeConsentRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: RevokeConsentResponse) => void): grpc.ClientUnaryCall;
    revokeConsent(input: RevokeConsentRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: RevokeConsentResponse) => void): grpc.ClientUnaryCall;
    revokeConsent(input: RevokeConsentRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: RevokeConsentResponse) => void): grpc.ClientUnaryCall;
    revokeConsent(input: RevokeConsentRequest, callback: (err: grpc.ServiceError | null, value?: RevokeConsentResponse) => void): grpc.ClientUnaryCall;
}
/**
 * TrustedDataAccessAPI represents the service interface for the Trusted Data Access API.
 *
 * @generated from protobuf service indykite.trusted_data.access.v1beta1.TrustedDataAccessAPI
 */
export class TrustedDataAccessAPIClient extends grpc.Client implements ITrustedDataAccessAPIClient {
    private readonly _binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions>;
    constructor(address: string, credentials: grpc.ChannelCredentials, options: grpc.ClientOptions = {}, binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions> = {}) {
        super(address, credentials, options);
        this._binaryOptions = binaryOptions;
    }
    /**
     * @generated from protobuf rpc: TrustedDataAccess(indykite.trusted_data.access.v1beta1.TrustedDataAccessRequest) returns (indykite.trusted_data.access.v1beta1.TrustedDataAccessResponse);
     */
    trustedDataAccess(input: TrustedDataAccessRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: TrustedDataAccessResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: TrustedDataAccessResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: TrustedDataAccessResponse) => void)): grpc.ClientUnaryCall {
        const method = TrustedDataAccessAPI.methods[0];
        return this.makeUnaryRequest<TrustedDataAccessRequest, TrustedDataAccessResponse>(`/${TrustedDataAccessAPI.typeName}/${method.name}`, (value: TrustedDataAccessRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): TrustedDataAccessResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: GrantConsent(indykite.trusted_data.access.v1beta1.GrantConsentRequest) returns (indykite.trusted_data.access.v1beta1.GrantConsentResponse);
     */
    grantConsent(input: GrantConsentRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: GrantConsentResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: GrantConsentResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: GrantConsentResponse) => void)): grpc.ClientUnaryCall {
        const method = TrustedDataAccessAPI.methods[1];
        return this.makeUnaryRequest<GrantConsentRequest, GrantConsentResponse>(`/${TrustedDataAccessAPI.typeName}/${method.name}`, (value: GrantConsentRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): GrantConsentResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: RevokeConsent(indykite.trusted_data.access.v1beta1.RevokeConsentRequest) returns (indykite.trusted_data.access.v1beta1.RevokeConsentResponse);
     */
    revokeConsent(input: RevokeConsentRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: RevokeConsentResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: RevokeConsentResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: RevokeConsentResponse) => void)): grpc.ClientUnaryCall {
        const method = TrustedDataAccessAPI.methods[2];
        return this.makeUnaryRequest<RevokeConsentRequest, RevokeConsentResponse>(`/${TrustedDataAccessAPI.typeName}/${method.name}`, (value: RevokeConsentRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): RevokeConsentResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
}
