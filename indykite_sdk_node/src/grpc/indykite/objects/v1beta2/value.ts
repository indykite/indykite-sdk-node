// @generated by protobuf-ts 2.9.0 with parameter long_type_string,client_grpc1,generate_dependencies
// @generated from protobuf file "indykite/objects/v1beta2/value.proto" (package "indykite.objects.v1beta2", syntax proto3)
// tslint:disable
//
// Copyright (c) 2023 IndyKite
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Duration } from "../../../google/protobuf/duration";
import { Timestamp } from "../../../google/protobuf/timestamp";
/**
 * A message that can hold any of the supported value types.
 *
 * @generated from protobuf message indykite.objects.v1beta2.Value
 */
export interface Value {
    /**
     * @generated from protobuf oneof: type
     */
    type: {
        oneofKind: "boolValue";
        /**
         * A boolean value.
         *
         * @generated from protobuf field: bool bool_value = 1;
         */
        boolValue: boolean;
    } | {
        oneofKind: "integerValue";
        /**
         * An integer value.
         *
         * @generated from protobuf field: int64 integer_value = 2;
         */
        integerValue: string;
    } | {
        oneofKind: "doubleValue";
        /**
         * A double value.
         *
         * @generated from protobuf field: double double_value = 3;
         */
        doubleValue: number;
    } | {
        oneofKind: "timeValue";
        /**
         * A timestamp value.
         *
         * @generated from protobuf field: google.protobuf.Timestamp time_value = 4;
         */
        timeValue: Timestamp;
    } | {
        oneofKind: "durationValue";
        /**
         * A duration value.
         *
         * @generated from protobuf field: google.protobuf.Duration duration_value = 5;
         */
        durationValue: Duration;
    } | {
        oneofKind: "stringValue";
        /**
         * A string value.
         *
         * @generated from protobuf field: string string_value = 6;
         */
        stringValue: string;
    } | {
        oneofKind: "bytesValue";
        /**
         * A bytes value.
         *
         * @generated from protobuf field: bytes bytes_value = 7;
         */
        bytesValue: Uint8Array;
    } | {
        oneofKind: "arrayValue";
        /**
         * An array value.
         *
         * @generated from protobuf field: indykite.objects.v1beta2.Array array_value = 8;
         */
        arrayValue: Array$;
    } | {
        oneofKind: "mapValue";
        /**
         * A map value.
         *
         * @generated from protobuf field: indykite.objects.v1beta2.Map map_value = 9;
         */
        mapValue: Map;
    } | {
        oneofKind: undefined;
    };
}
/**
 * An array value.
 *
 * @generated from protobuf message indykite.objects.v1beta2.Array
 */
export interface Array$ {
    /**
     * Values in the array.
     *
     * @generated from protobuf field: repeated indykite.objects.v1beta2.Value values = 1;
     */
    values: Value[];
}
/**
 * A map value.
 *
 * @generated from protobuf message indykite.objects.v1beta2.Map
 */
export interface Map {
    /**
     * The map's keys and values.
     *
     * @generated from protobuf field: map<string, indykite.objects.v1beta2.Value> fields = 1;
     */
    fields: {
        [key: string]: Value;
    };
}
// @generated message type with reflection information, may provide speed optimized methods
class Value$Type extends MessageType<Value> {
    constructor() {
        super("indykite.objects.v1beta2.Value", [
            { no: 1, name: "bool_value", kind: "scalar", oneof: "type", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "integer_value", kind: "scalar", oneof: "type", T: 3 /*ScalarType.INT64*/ },
            { no: 3, name: "double_value", kind: "scalar", oneof: "type", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "time_value", kind: "message", oneof: "type", T: () => Timestamp },
            { no: 5, name: "duration_value", kind: "message", oneof: "type", T: () => Duration },
            { no: 6, name: "string_value", kind: "scalar", oneof: "type", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "bytes_value", kind: "scalar", oneof: "type", T: 12 /*ScalarType.BYTES*/ },
            { no: 8, name: "array_value", kind: "message", oneof: "type", T: () => Array$ },
            { no: 9, name: "map_value", kind: "message", oneof: "type", T: () => Map }
        ]);
    }
    create(value?: PartialMessage<Value>): Value {
        const message = { type: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Value>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Value): Value {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool bool_value */ 1:
                    message.type = {
                        oneofKind: "boolValue",
                        boolValue: reader.bool()
                    };
                    break;
                case /* int64 integer_value */ 2:
                    message.type = {
                        oneofKind: "integerValue",
                        integerValue: reader.int64().toString()
                    };
                    break;
                case /* double double_value */ 3:
                    message.type = {
                        oneofKind: "doubleValue",
                        doubleValue: reader.double()
                    };
                    break;
                case /* google.protobuf.Timestamp time_value */ 4:
                    message.type = {
                        oneofKind: "timeValue",
                        timeValue: Timestamp.internalBinaryRead(reader, reader.uint32(), options, (message.type as any).timeValue)
                    };
                    break;
                case /* google.protobuf.Duration duration_value */ 5:
                    message.type = {
                        oneofKind: "durationValue",
                        durationValue: Duration.internalBinaryRead(reader, reader.uint32(), options, (message.type as any).durationValue)
                    };
                    break;
                case /* string string_value */ 6:
                    message.type = {
                        oneofKind: "stringValue",
                        stringValue: reader.string()
                    };
                    break;
                case /* bytes bytes_value */ 7:
                    message.type = {
                        oneofKind: "bytesValue",
                        bytesValue: reader.bytes()
                    };
                    break;
                case /* indykite.objects.v1beta2.Array array_value */ 8:
                    message.type = {
                        oneofKind: "arrayValue",
                        arrayValue: Array$.internalBinaryRead(reader, reader.uint32(), options, (message.type as any).arrayValue)
                    };
                    break;
                case /* indykite.objects.v1beta2.Map map_value */ 9:
                    message.type = {
                        oneofKind: "mapValue",
                        mapValue: Map.internalBinaryRead(reader, reader.uint32(), options, (message.type as any).mapValue)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Value, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool bool_value = 1; */
        if (message.type.oneofKind === "boolValue")
            writer.tag(1, WireType.Varint).bool(message.type.boolValue);
        /* int64 integer_value = 2; */
        if (message.type.oneofKind === "integerValue")
            writer.tag(2, WireType.Varint).int64(message.type.integerValue);
        /* double double_value = 3; */
        if (message.type.oneofKind === "doubleValue")
            writer.tag(3, WireType.Bit64).double(message.type.doubleValue);
        /* google.protobuf.Timestamp time_value = 4; */
        if (message.type.oneofKind === "timeValue")
            Timestamp.internalBinaryWrite(message.type.timeValue, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Duration duration_value = 5; */
        if (message.type.oneofKind === "durationValue")
            Duration.internalBinaryWrite(message.type.durationValue, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* string string_value = 6; */
        if (message.type.oneofKind === "stringValue")
            writer.tag(6, WireType.LengthDelimited).string(message.type.stringValue);
        /* bytes bytes_value = 7; */
        if (message.type.oneofKind === "bytesValue")
            writer.tag(7, WireType.LengthDelimited).bytes(message.type.bytesValue);
        /* indykite.objects.v1beta2.Array array_value = 8; */
        if (message.type.oneofKind === "arrayValue")
            Array$.internalBinaryWrite(message.type.arrayValue, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* indykite.objects.v1beta2.Map map_value = 9; */
        if (message.type.oneofKind === "mapValue")
            Map.internalBinaryWrite(message.type.mapValue, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message indykite.objects.v1beta2.Value
 */
export const Value = new Value$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Array$$Type extends MessageType<Array$> {
    constructor() {
        super("indykite.objects.v1beta2.Array", [
            { no: 1, name: "values", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Value }
        ]);
    }
    create(value?: PartialMessage<Array$>): Array$ {
        const message = { values: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Array$>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Array$): Array$ {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated indykite.objects.v1beta2.Value values */ 1:
                    message.values.push(Value.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Array$, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated indykite.objects.v1beta2.Value values = 1; */
        for (let i = 0; i < message.values.length; i++)
            Value.internalBinaryWrite(message.values[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message indykite.objects.v1beta2.Array
 */
export const Array$ = new Array$$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Map$Type extends MessageType<Map> {
    constructor() {
        super("indykite.objects.v1beta2.Map", [
            { no: 1, name: "fields", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => Value } }
        ]);
    }
    create(value?: PartialMessage<Map>): Map {
        const message = { fields: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Map>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Map): Map {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<string, indykite.objects.v1beta2.Value> fields */ 1:
                    this.binaryReadMap1(message.fields, reader, options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap1(map: Map["fields"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof Map["fields"] | undefined, val: Map["fields"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = Value.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field indykite.objects.v1beta2.Map.fields");
            }
        }
        map[key ?? ""] = val ?? Value.create();
    }
    internalBinaryWrite(message: Map, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<string, indykite.objects.v1beta2.Value> fields = 1; */
        for (let k of Object.keys(message.fields)) {
            writer.tag(1, WireType.LengthDelimited).fork().tag(1, WireType.LengthDelimited).string(k);
            writer.tag(2, WireType.LengthDelimited).fork();
            Value.internalBinaryWrite(message.fields[k], writer, options);
            writer.join().join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message indykite.objects.v1beta2.Map
 */
export const Map = new Map$Type();
